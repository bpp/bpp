# Copyright (C) 2016-2024 Tomas Flouri, Bruce Rannala and Ziheng Yang
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: Tomas Flouri <t.flouris@ucl.ac.uk>,
# Department of Genetics, Evolution and Environment,
# University College London, Gower Street, London WC1E 6BT, England

CFLAGS = /W2 /DHAVE_SSE3 /DHAVE_AVX /DHAVE_AVX2 /Ox /Ot

OBJ_AVX=core_likelihood_avx.obj core_partials_avx.obj
SRC_AVX=core_likelihood_avx.c core_partials_avx.c

OBJ_AVX2=core_likelihood_avx2.obj core_partials_avx2.obj
SRC_AVX2=core_likelihood_avx2.c core_partials_avx2.c

OBJ_SSE=core_likelihood_sse.obj core_partials_sse.obj
SRC_SSE=core_likelihood_sse.c core_partials_sse.c

PROG = bpp.exe

OBJ_LIBPLL = \
	core_likelihood.obj \
	core_partials.obj \
	core_pmatrix.obj \
	hardware.obj \

SRC_LIBPLL = \
	core_likelihood.c \
	core_partials.c \
	core_pmatrix.c \
	hardware.c

OBJ_BPP = \
	arch.obj \
	allfixed.obj \
	bfdriver.obj \
	bpp.obj \
	cfile.obj \
	cfile_sim.obj \
	compress.obj \
	constraint.obj \
	debug.obj \
	delimit.obj \
	diploid.obj \
	dlist.obj \
	dump.obj \
	gamma.obj \
	gtree.obj \
	hash.obj \
	list.obj \
	locus.obj \
	mapping.obj \
	maps.obj \
	method.obj \
	miginfo.obj \
	ming2.obj \
	msa.obj \
	msci_gen.obj \
	load.obj \
	lswitch.obj \
	output.obj \
	parsemap.obj \
	pdfgen.obj \
	phylip.obj \
	prop_gamma.obj \
	prop_mixing.obj \
	prop_rj.obj \
	random.obj \
	revolutionary.obj \
	rtree.obj \
	stree.obj \
	summary.obj \
	summary11.obj \
	simulate.obj \
	threads.obj \
	treeparse.obj \
	util.obj \
	visual.obj \
	a1b1.obj \

all: $(PROG)

$(PROG): $(OBJ_AVX2) $(OBJ_AVX) $(OBJ_SSE) $(OBJ_LIBPLL) $(OBJ_BPP) 
	link /out:$@ $** libpthreadvc3.lib

$(OBJ_AVX2): $(SRC_AVX2)
	cl -c $(CFLAGS) /arch:AVX2 $**

$(OBJ_AVX): $(SRC_AVX)
	cl -c $(CFLAGS) /arch:AVX $**

$(OBJ_SSE): $(SRC_SSE)
	cl -c $(CFLAGS) /arch:AVX $**

$(OBJ_LIBPLL): $(SRC_LIBPLL)
	cl -c $(CFLAGS) $**

clean:
	del *.obj $(PROG)
